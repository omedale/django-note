from rest_framework.views import exception_handler

def core_exception_handler(exc, context):
  response = exception_handler(exc, context)
  handlers = {
      'ValidationError': _handle_generic_error
  }
  # Check whether to handle this exception or let  Django REST Framework do its thing.
  exception_class = exc.__class__.__name__

  if exception_class in handlers:
    # return the response generated by the default exception handler.
    return handlers[exception_class](exc, context, response)

  return response

def _handle_generic_error(exc, context, response):
  # take the response generated by DRF and wrap it in the `errors` key.
  response.data = {
      'errors': response.data
  }

  return response
